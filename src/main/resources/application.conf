akka {
  loglevel = INFO
  stdout-loglevel = INFO
  event-handlers = ["akka.event.Logging$DefaultLogger"]
  log-dead-letters = 0
  log-dead-letters-during-shutdown = off
  extensions = ["com.romix.akka.serialization.kryo.KryoSerializationExtension$"]

  actor {
    serialize-messages = on
    provider = "akka.cluster.ClusterActorRefProvider"
    serializers {
      java = "akka.serialization.JavaSerializer"
      kryo = "com.romix.akka.serialization.kryo.KryoSerializer"
    }
    kryo  {
      type = "graph"
      idstrategy = "default"
      buffer-size = 4096
      max-buffer-size = -1
      use-manifests = false
      use-unsafe = false
      implicit-registration-logging = false
      post-serialization-transformations = "lz4"
      kryo-trace = false
      resolve-subclasses = false
    }
    serialization-bindings {
      "java.lang.String" = kryo
      "io.ticofab.akkaclusterexample.Ok" = kryo
    }
  }

  remote {
    enabled-transports = ["akka.remote.netty.tcp"]
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = "127.0.0.1"
      hostname = ${?HOST}
      port = ${?PORT}
    }
  }

  cluster {
    seed-nodes = [
      "akka.tcp://words@127.0.0.1:2551"
    ]
    roles = ["seed"]
    roles = ${?ROLES}
    role {
      seed.min-nr-of-members = 1
      worker.min-nr-of-members = 1
    }
  }
}
